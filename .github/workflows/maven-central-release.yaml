name: Publish "Telegram InitData" package to the Maven Central Repository

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      PKG_VERSION: ${{ steps.package-version.outputs.PKG_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install xmlstarlet
      - name: Fetch project version and set PKG_VERSION
        id: package-version
        run: |
          echo "PKG_VERSION=$(xmlstarlet sel -t -v '/project/version' pom.xml)" >> "$GITHUB_OUTPUT"
          echo $(xmlstarlet sel -N x="http://maven.apache.org/POM/4.0.0" -t -v "/x:project/x:version" pom.xml)
          git ls-remote --tags origin
      - name: Check release version already exists
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git ls-remote --tags origin | grep -q "refs/tags/${PKG_VERSION}"; then
            echo "Release ${PKG_VERSION} already exist, aborting!"
            exit 1
          fi
  build:
    runs-on: ubuntu-latest
    needs: [ check-version ]
    steps:
      - uses: actions/checkout@v4
      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build package
        run: mvn -B package --file pom.xml
      - uses: actions/upload-artifact@v4
        with:
          name: target
          path: |
            ${{ github.workspace }}/target
  release:
    runs-on: ubuntu-latest
    needs: [ check-version, build ]
    env:
      PKG_VERSION: ${{ needs.build.outputs.PKG_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Check release version already exists
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if ! git ls-remote --tags origin | grep -q "refs/tags/${PKG_VERSION}"; then
            git tag -a "${PKG_VERSION}" -m "Release ${PKG_VERSION}"
            git push origin "${PKG_VERSION}"
          else
            echo "Release ${PKG_VERSION} already exist aborting"
            exit 1
      - uses: actions/download-artifact@v4
        with:
          name: target
          path: ${{ github.workspace }}/target
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.PKG_VERSION }}
          name: "v${{ env.PKG_VERSION }}"
          body: ${{ github.event.head_commit.message }}
          artifacts: "target/${{ github.event.repository.name }}*.jar"
  publish-maven-central:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - uses: actions/checkout@v4
      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: actions/download-artifact@v4
        with:
          name: target
          path: ${{ github.workspace }}/target
      - name: Publish to Apache Maven Central
        run: ls ./target
#        run: mvn deploy -Prelease,sonatype-central
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
